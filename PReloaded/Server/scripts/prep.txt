

import uint8 GetCurrentAim()from"client_keybinds";
import bool GUI_IsKeyPressed(uint8 key)from"client_gui";

import int GUI_GetActiveMainScreen()from"client_gui";
import int GUI_GetActiveScreen()from"client_gui";

class SmartCollection
{
	array<uint16>Items;
	array<uint16>Tools;
	array<uint8>Slots;
	string Text;    
	
	SmartCollection(array<uint16>&items,array<uint8>&slots,string@text,uint msg,uint idx)
	{
		Items=items;
		Tools.resize(0);
		Slots=slots;
		
		if((@text!=null))
		Text=text;
		else
		Text=GetMsgStr(msg,idx);
	} 
	
	SmartCollection(array<uint16>&items,array<uint16>&tools,array<uint8>&slots,string@text,uint msg,uint idx)
	{
		Items=items;
		Tools=tools;
		Slots=slots;
		
		if((@text!=null))
		Text=text;
		else
		Text=GetMsgStr(msg,idx);
	}
}

class SmartCursor
{
	uint drawLayer; 
	
	bool drawInfo;
	bool drawInfoTool;
	int drawInfoOffsetX;
	int drawInfoOffsetY;
	uint drawInfoColor;
	int drawInfoFont;
	int drawInfoFlags; 
	
	bool drawTool;
	int drawToolOffsetX;
	int drawToolOffsetY;
	uint drawToolSize; 
	
	array<SmartCollection>collections; 
	
	private uint clickTargetId;
	private uint clickTargetPid;
	private uint16 clickTargetHexX;
	private uint16 clickTargetHexY;
	private bool clickTool;
	private uint clickToolId;
	private uint16 clickToolPid;
	
	SmartCursor()
	{
		this.drawLayer=3;
		this.DrawInfo(true);
		this.DrawTool(true);
		
		this.ClickReset();
	}    
	
	void DrawInfo(bool enable,bool toolName=true,int offsetX=2,int offsetY=-12,uint color=0,int font=5,int flags=0x0200)
	{
		this.drawInfo=enable;
		this.drawInfoTool=toolName;
		this.drawInfoOffsetX=offsetX;
		this.drawInfoOffsetY=offsetY;
		this.drawInfoColor=color;
		this.drawInfoFont=font;
		this.drawInfoFlags=flags;
	}
	
	void DrawTool(bool enable,int offsetX=3,int offsetY=5,uint size=45)
	{
		this.drawTool=enable;
		this.drawToolOffsetX=offsetX;
		this.drawToolOffsetY=offsetY;
		this.drawToolSize=size;
	}    
	
	void Add(SmartCollection&collection)final
	{
		this.collections.insertLast(collection);
		
		if(this.collections.last().Text=="error")
		this.collections.last().Text="";
	}   
	
	private ItemCl@FindTool(CritterCl&chosen,SmartCollection&collection)
	{
		uint slotsLength=collection.Slots.length();
		
		if(slotsLength==0)
		return null;
		
		for(uint s=0;s<slotsLength;s++)
		{
			array<ItemCl@>items;
			uint count=chosen.GetItems(collection.Slots[s],items); 
			
			for(uint i=0;i<count;i++)
			{
				if(collection.Tools.find(items[i].Proto.ProtoId)>=0)
				return items[i];
			}
		}
		
		return null;
	}         
	
	void Draw(uint layer)
	{
		CritterCl@chosen=GetChosen();
		if((@chosen!=null))
		this.Draw(layer,chosen);
	}
	
	void Draw(uint layer,CritterCl&chosen)
	{
		
		if(layer!=this.drawLayer)
		return; 
		
		this.ClickReset();
		
		if(this.drawTool)
		__HideCursor=false;
		
		if(GetCurrentMapPid()>0&&GetCurrentCursor()==(0)&&GUI_GetActiveScreen()==(5))
		{
			
			ItemCl@item=GetMonitorItem(__MouseX,__MouseY,false);
			if((@item!=null)&&(((item.Flags)&((0x10000000)))!=0))
			{
				
				uint itemPid=item.Proto.ProtoId;
				for(uint c=0,cLen=this.collections.length();c<cLen;c++)
				{
					SmartCollection collection=this.collections[c];
					if(collection.Items.find(itemPid)>=0)
					{ 
						
						bool needTool=(collection.Tools.length()>0);
						ItemCl@tool;
						if(needTool)
						@tool=this.FindTool(chosen,collection);
						
						if(!needTool||(needTool&&(@tool!=null)))
						{        
							
							if(this.drawInfo)
							{
								string txt=collection.Text; 
								
								if(tool.Proto.ProtoId==(7)||tool.Proto.ProtoId==(280)||tool.Proto.ProtoId==(320)){
									if(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36)){
										txt="Feed fish";
									}else{
										txt="Throw wherever";
										if((@chosen!=null)){
											int aim=GetCurrentAim();
											switch(aim){
												case(6):
												txt="Throw even closer";
												break;
												case(5):
												txt="Throw close";
												break;
												case(8):
												case(4):
												txt="Throw not too far";
												break;
												case(2):
												txt="Throw far";
												break;
												case(3):
												txt="Throw further";
												break;
												case(1):
												txt="Throw even further";
												break;
												case(7):
												txt="Throw as far you can";
												break;
											}
										}
									}
								}
								
								if(tool.Proto.ProtoId==(289)){
									if(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36)){
										txt="Loot Grave";
									}
								}
								
								if(txt.length()>0)
								{
									if(needTool&&this.drawInfoTool)
									{
										string txtTool=GetMsgStr((2),tool.Proto.ProtoId*100+tool.Info);
										if(txtTool!="error"){
											if((tool.Proto.ProtoId==(7)||tool.Proto.ProtoId==(280)||tool.Proto.ProtoId==(320))
											&&(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36))){
												txt+=" (Barley)";
											}else{
												txt+=" ("+txtTool+")";
											}
											if(tool.Proto.ProtoId==(289)&&(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36))){
												txt+=" (Hands)";
											}else{
												txt+=" ("+txtTool+")";
											}
										}
									}
									
									DrawText(txt,__MouseX+this.drawInfoOffsetX,__MouseY+this.drawInfoOffsetY,0,0,this.drawInfoColor,this.drawInfoFont,this.drawInfoFlags);
								}
							} 
							
							if(needTool&&this.drawTool)
							{
								if((tool.Proto.ProtoId==(7)||tool.Proto.ProtoId==(280)||tool.Proto.ProtoId==(320))
								&&(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36))){
									CritterCl@chosen=GetChosen();
									if(!(@chosen!=null)){
										Message("Invalid Chosen");
										return;
									}
									array<ItemCl@>items;
									uint countInvItems=chosen.GetItems((0),items);
									ItemCl@barley;
									for(uint i=0;i<countInvItems;i++){
										if(items[i].Proto.ProtoId==(9921)){
											@barley=items[i];
										}
									}
									if((@barley!=null)){
										array<uint>click={(6),barley.Id,(9921),(3),this.clickTargetId,(4),0};
										SetChosenActions(click);
									}else{
										Message("I'm out of fish food.");
										return;
									}
									
									uint spriteId=LoadSprite(barley.PicInv>0?barley.PicInv:barley.Proto.PicInv,barley.Dir);
									if(spriteId>0)
									{
										__HideCursor=true;
										DrawSprite(spriteId,-1,__MouseX+this.drawToolOffsetX,__MouseY+this.drawToolOffsetY,this.drawToolSize,this.drawToolSize,true,false,0);
									}
								}else if(tool.Proto.ProtoId==(289)&&(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36))){
									CritterCl@chosen=GetChosen();
									if(!(@chosen!=null)){
										Message("Invalid Chosen");
										return;
									}
									
								}else{
									uint spriteId=LoadSprite(tool.PicInv>0?tool.PicInv:tool.Proto.PicInv,tool.Dir);
									if(spriteId>0)
									{
										__HideCursor=true;
										DrawSprite(spriteId,-1,__MouseX+this.drawToolOffsetX,__MouseY+this.drawToolOffsetY,this.drawToolSize,this.drawToolSize,true,false,0);
									}
								}
								
							}  
							
							if(needTool)
							{
								this.clickTool=true;
								this.clickToolId=tool.Id;
								this.clickToolPid=tool.Proto.ProtoId;
							}
							this.clickTargetId=item.Id;
							this.clickTargetPid=item.Proto.ProtoId;
							this.clickTargetHexX=item.HexX;
							this.clickTargetHexY=item.HexY;
							
							return;
						}
					}
				}
			}
		}
	}    
	
	void ClickReset()
	{
		this.clickTool=false;
		this.clickTargetId=this.clickTargetPid=this.clickTargetHexX=this.clickTargetHexY=0;
		this.clickToolId=this.clickToolPid=0;
	}    
	
	bool Click(int click)
	{
		if(GetCurrentCursor()==(0)&&click==(0)&&this.clickTargetId>0)
		{
			if(this.clickTool)
			{
				if(this.clickToolId>0&&this.clickToolPid>0)
				{
					
					if(this.clickToolPid==(7)||this.clickToolPid==(280)||this.clickToolPid==(320)){
						if(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36)){
							CritterCl@chosen=GetChosen();
							if(!(@chosen!=null)){
								Message("Invalid Chosen");
								return false;
							}
							array<ItemCl@>items;
							uint countInvItems=chosen.GetItems((0),items);
							ItemCl@barley;
							for(uint i=0;i<countInvItems;i++){
								if(items[i].Proto.ProtoId==(9921)){
									@barley=items[i];
								}
							}
							if((@barley!=null)){
								array<uint>click={(6),barley.Id,(9921),(3),this.clickTargetId,(4),0};
								SetChosenActions(click);
							}else{
								Message("I'm out of fish food.");
								return false;
							}
						}else{
							int aim=GetCurrentAim();
							int range=0;
							switch(aim){
								case(6):
								range=1;
								break;
								case(5):
								range=2;
								break;
								case(8):
								case(4):
								range=3;
								break;
								case(2):
								range=4;
								break;
								case(3):
								range=5;
								break;
								case(1):
								range=6;
								break;
								case(7):
								range=7;
								break;
							}
							RunServerScriptUnsafe("prod_fishing@unsafe_SpearFish",this.clickToolPid,this.clickTargetId,range,null,null);
						}
					}else if(this.clickToolPid==(289)&&(GUI_IsKeyPressed(0x2A)||GUI_IsKeyPressed(0x36))){
						array<uint>click={(14),this.clickTargetPid,this.clickTargetHexX,this.clickTargetHexY};
						SetChosenActions(click);
					}else{
						array<uint>click={(6),this.clickToolId,this.clickToolPid,(3),this.clickTargetId,(4),0};
						SetChosenActions(click);
					}
				}
			}
			else
			{
				array<uint>click={(14),this.clickTargetPid,this.clickTargetHexX,this.clickTargetHexY};
				SetChosenActions(click);
			}
			return(true);
		}
		
		return(false);
	}
}

SmartCursor smart_cursor();       

void InitSmartCursor()
{
	smart_cursor.drawLayer=2;    
	
	array<uint8>slot_all={(1),(2),(0)};
	array<uint8>slot_hands={(1),(2)};
	array<uint8>slot_active={(1)};  
	
	array<uint16>tool_knife={(319),(4),(45),(236),(517),(522)};
	array<uint16>tool_axe={(1863),(543)};
	array<uint16>tool_mine_1={(1863),(6),(115)};
	array<uint16>tool_mine_2={(6),(115)};
	array<uint16>tool_mine_3={(115)};
	array<uint16>tool_junk={(75)};
	array<uint16>tool_shovel={(600),(289)};
	array<uint16>tool_fishingpole={(280),(7),(320)};  
	
	array<uint16>fibers={(1817)}; 
	
	array<uint16>graves={(344),(345)};
	
	array<uint16>junk_metal={22100,22101,22102,22103,22104,22105,22106,22107,22108,22109,22110,22111};
	array<uint16>junk_wooden={22200,22201,22202,22203,22204,22205};
	array<uint16>junk_paper={22300,22301,22302,22303};
	array<uint16>junk_barrel={22304,22305,22306,22307,22308};
	
	array<uint16>meat_table={(1823)}; 
	
	array<uint16>poo={(1854),(1855),(1856),(1857)};
	
	array<uint16>vein_iron_1={(22000)};
	array<uint16>vein_iron_2={(22001)};
	array<uint16>vein_minerals_1={(22002)};
	array<uint16>vein_minerals_2={(22003)};
	array<uint16>vein_uranium={(22004)};
	array<uint16>vein_gold={(22005)}; 
	
	array<uint16>wood={(1820),(1821),(1822)};
	
	array<uint16>fishing_pool={26770};  
	
	SmartCollection scGraves(graves,tool_shovel,slot_all,null,((0)),(1810));   
	
	smart_cursor.Add(SmartCollection(fibers,tool_knife,slot_all,null,((0)),(1807)));
	smart_cursor.Add(scGraves);
	smart_cursor.Add(SmartCollection(junk_metal,tool_junk,slot_all,null,((0)),(1812)));
	smart_cursor.Add(SmartCollection(junk_wooden,tool_junk,slot_all,null,((0)),(1812)));
	smart_cursor.Add(SmartCollection(junk_paper,tool_junk,slot_all,null,((0)),(1812)));
	smart_cursor.Add(SmartCollection(junk_barrel,tool_junk,slot_all,null,((0)),(1812)));
	smart_cursor.Add(SmartCollection(meat_table,tool_knife,slot_all,null,((0)),(1811)));
	smart_cursor.Add(SmartCollection(poo,tool_shovel,slot_all,null,((0)),(1808)));
	smart_cursor.Add(SmartCollection(wood,tool_axe,slot_all,null,((0)),(1809)));
	
	smart_cursor.Add(SmartCollection(vein_iron_1,tool_mine_1,slot_all,null,((0)),(1801)));
	smart_cursor.Add(SmartCollection(vein_minerals_1,tool_mine_1,slot_all,null,((0)),(1803)));
	smart_cursor.Add(SmartCollection(vein_iron_2,tool_mine_2,slot_all,null,((0)),(1802)));
	smart_cursor.Add(SmartCollection(vein_minerals_2,tool_mine_2,slot_all,null,((0)),(1804)));
	smart_cursor.Add(SmartCollection(vein_uranium,tool_mine_3,slot_all,null,((0)),(1805)));
	smart_cursor.Add(SmartCollection(vein_gold,tool_mine_3,slot_all,null,((0)),(1806)));
	smart_cursor.Add(SmartCollection(fishing_pool,tool_fishingpole,slot_all,"Throw spear",((0)),(1806)));
}

void SmartCursorDraw(uint layer)
{
	smart_cursor.Draw(layer);
}

bool SmartCursorClick(int click)
{
	return smart_cursor.Click(click);
} 

