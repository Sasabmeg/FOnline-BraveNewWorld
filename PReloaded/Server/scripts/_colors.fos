//
// FOnline: 2238
// Rotators
//
// _colors.fos
//

#ifndef __COLORS__
#define __COLORS__

#include "_defines.fos"

// Stuff
#define COLOR_RGB               # (r, g, b)(uint((0xFF << 24) | (((r) & 0xFF) << 16) | (((g) & 0xFF) << 8) | ((b) & 0xFF)))
#define COLOR_RGBA              # (r, g, b, a)(uint((((a) & 0xFF) << 24) | (((r) & 0xFF) << 16) | (((g) & 0xFF) << 8) | ((b) & 0xFF)))
#define COLOR_LIGHT             # (color, light)(COLOR_CHANGE_ALPHA(__GetColor(((color >> 16) & 0xFF) + light, ((color >> 8) & 0xFF) + light, (color & 0xFF) + light), (color >> 24) & 0xFF))

uint __GetColor(int r, int g, int b, int a = 0xFF)
{
    r = CLAMP(r, 0, 255);
    g = CLAMP(g, 0, 255);
    b = CLAMP(b, 0, 255);
    a = CLAMP(a, 0, 255);
    return COLOR_RGBA(r, g, b, a);
}

// Iface
#define COLOR_IFACE             (__GetColor(((COLOR_IFACE_FIX >> 16) & 0xFF) + __Light, ((COLOR_IFACE_FIX >> 8) & 0xFF) + __Light, (COLOR_IFACE_FIX & 0xFF) + __Light))
#define COLOR_IFACE_A           # (a)       ((COLOR_IFACE ^ 0xFF000000) | ((a) << 24))
#define COLOR_IFACE_RED         (COLOR_IFACE | (0xFF << 16))
#define COLOR_IFACE_GREEN       (COLOR_IFACE | (0xFF << 8))

// Text
#define COLOR_CONTOUR_RED       (COLOR_RGB(150, 0, 0))
#define COLOR_CONTOUR_YELLOW    (COLOR_RGB(150, 150, 0))
#define COLOR_CONTOUR_GREEN     (COLOR_RGB(0, 150, 0))

#define COLOR_LGRAY             (COLOR_RGB(0xAB, 0xAB, 0xAB))
#define COLOR_GRAY              (COLOR_RGB(0x7F, 0x7F, 0x7F))
#define COLOR_WHITE             (COLOR_RGB(0xFF, 0xFF, 0xFF))
#define COLOR_RED               (COLOR_RGB(0xC8, 0, 0))
#define COLOR_DRED              (COLOR_RGB(0xAA, 0, 0))
#define COLOR_DDRED             (COLOR_RGB(0x66, 0, 0))
#define COLOR_LRED              (COLOR_RGB(0xFF, 0, 0))
#define COLOR_BLUE              (COLOR_RGB(0, 0, 0xC8))
#define COLOR_DBLUE             (COLOR_RGB(0, 0, 0xAA))
#define COLOR_LBLUE             (COLOR_RGB(0, 0, 0xFF))
#define COLOR_TEAL              (COLOR_RGB(0x6D, 0xD9, 0xC6))
#define COLOR_DTEAL             (COLOR_RGB(0x4D, 0xA9, 0x96))
#define COLOR_DDTEAL            (COLOR_RGB(0x26, 0x5B, 0x5F))
#define COLOR_GREEN             (COLOR_RGB(0, 0xC8, 0))
#define COLOR_DGREEN            (COLOR_RGB(0, 0xAA, 0))
#define COLOR_DDGREEN           (COLOR_RGB(0, 0x66, 0))
#define COLOR_LGREEN            (COLOR_RGB(0, 0xFF, 0))
#define COLOR_BLACK             (COLOR_RGB(0, 0, 0))
#define COLOR_SBLACK            (COLOR_RGB(0x10, 0x10, 0x10))
#define COLOR_DARK              (COLOR_RGB(0x30, 0x30, 0x30))
#define COLOR_GREEN_RED         (COLOR_RGB(0, 0xC8, 0xC8))
#define COLOR_SAND              (COLOR_RGB(0x8F, 0x6F, 0))
#define COLOR_ORANGE			(COLOR_RGB(0xff, 0xa5, 0))
#define COLOR_DORANGE			(COLOR_RGB(0xea, 0x46, 0))
#define COLOR_DDORANGE			(COLOR_RGB(0x99, 0x66, 0))
#define COLOR_LLYELLOW          (COLOR_RGB(0xff, 0xff, 0))
#define COLOR_LYELLOW           (COLOR_RGB(0xcc, 0xcc, 0))
#define COLOR_YELLOW            (COLOR_RGB(0xaa, 0xaa, 0))
#define COLOR_DYELLOW           (COLOR_RGB(0x99, 0x99, 0))
#define COLOR_DDYELLOW          (COLOR_RGB(0x66, 0x66, 0))
#define COLOR_GOLDEN_YELLOW     (COLOR_RGB(0xef, 0xcf, 30))

#define COLOR_SKY_BLUE			(COLOR_RGB(0x64, 0x95, 0xed))

// World Map
#define COLOR_WM_ALPHA			(120)
#define COLOR_WM_BASE			(COLOR_RGBA(40, 200, 255, COLOR_WM_ALPHA))
#define COLOR_WM_TENT           (COLOR_RGBA(46, 111, 146, COLOR_WM_ALPHA))
#define COLOR_WM_QUEST			(COLOR_RGBA(255, 128, 0, COLOR_WM_ALPHA))
#define COLOR_WM_TC_CONTROL		(COLOR_RGBA(255, 64, 0, COLOR_WM_ALPHA))
#define COLOR_WM_TC_FREE		(COLOR_RGBA(0, 255, 0, COLOR_WM_ALPHA))
#define COLOR_WM_PLAYER_CARAVAN (COLOR_RGBA(255, 70, 0, COLOR_WM_ALPHA))

// Hinkley (from minigame.fos)
#define COLOR_HINKLEY_TEAM1		(COLOR_RGB(255, 170, 0))
#define COLOR_HINKLEY_TEAM2		(COLOR_RGB(0, 100, 240))

// Other
#define COLOR_GAME_RGB          # (r, g, b)(__GetColor(r + __Light, g + __Light, b + __Light))

//  Floating heal text
#define COLOR_HEAL_TEXT_CRIT_SUCCESS    (COLOR_RGB(0, 0xFF, 0))
#define COLOR_HEAL_TEXT_SUCCESS         (COLOR_RGB(0, 0xCC, 0))
#define COLOR_HEAL_TEXT_FAILURE         (COLOR_RGB(0, 0xA5, 0x88))

#endif // __COLORS__
